name: Deploy hello.py into cct_workflow
on:
  workflow_dispatch:
    inputs:
      description:
        description: 'Add your description'
        default: ''
        required: true
jobs:
  deploy:
    runs-on: ubuntu-latest 
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2   
        with: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Create deployment package for Lambda function
        run: |
          cd app
          zip -r9 lambda.zip .
      - name: Determine function name
        id: determine_function_name
        run: |
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "FUNCTION_NAME=${{ secrets.AWS_PROD_FUNCTION_NAME }}" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" == "refs/heads/dev" ]; then
            echo "FUNCTION_NAME=${{ secrets.AWS_DEV_FUNCTION_NAME }}" >> $GITHUB_ENV
          else
            echo "Error: This workflow only supports deployments on dev and main branches."
            exit 1
          fi
          echo "Function name set to: $FUNCTION_NAME"
      - name: Deploy Lambda function code
        run: |
          function_deploy() {
            aws lambda update-function-code \
            --function-name "$FUNCTION_NAME" \
            --zip-file fileb://app/lambda.zip \
            --publish
              STATUS=$?
              echo "Status: $STATUS"
          }
          function_deploy        
          while [ $STATUS -ne 0 ]; do
            function_deploy   
          done
          echo "Deployment successful with Status: $STATUS!"
      # - name: Wait for 10 seconds (Optional)
        # run: sleep 10
      - name: Update function configuration with description
        run: |
          function_update() {
            aws lambda update-function-configuration \
            --function-name "$FUNCTION_NAME" \
            --description "${{ github.event.inputs.description }}"
          }
          function_update
          # Retry logic with longer delay
          for i in {1..5}; do
            function_update && break || (echo "Retrying..."; )
          done

